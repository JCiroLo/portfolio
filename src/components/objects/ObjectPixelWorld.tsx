/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: kaede256 (https://sketchfab.com/kaede256)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/planet-earth-bce3ea48781c4f02a8c52d2678220d07
Title: Planet Earth
*/

import * as THREE from "three";
import { forwardRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { PUBLIC_PATH } from "../../utilities/constants";

type GLTFResult = GLTF & {
  nodes: {
    Earth_Ice_0: THREE.Mesh;
    Earth_Water_0: THREE.Mesh;
    Earth_Sand_0: THREE.Mesh;
    Earth_Grass_0: THREE.Mesh;
    Earth_Details_Wood_0: THREE.Mesh;
    Earth_Details_Tree_0: THREE.Mesh;
    Earth_Details_Tree_0_1: THREE.Mesh;
    Earth_Details_Ice_0: THREE.Mesh;
    Earth_Details_Blue_0: THREE.Mesh;
    Earth_Details_Sand_0: THREE.Mesh;
    Earth_Details_red_0: THREE.Mesh;
    Clouds_and_Stars_Ice_0: THREE.Mesh;
    Clouds_and_Stars_Star_0: THREE.Mesh;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
    Water: THREE.MeshStandardMaterial;
    Sand: THREE.MeshStandardMaterial;
    Grass: THREE.MeshStandardMaterial;
    Wood: THREE.MeshStandardMaterial;
    Tree: THREE.MeshStandardMaterial;
    Blue: THREE.MeshStandardMaterial;
    material_7: THREE.MeshStandardMaterial;
    Star: THREE.MeshStandardMaterial;
  };
};

type ObjectPixelWorldProps = JSX.IntrinsicElements["group"] & { envMap: THREE.Texture };

const ObjectPixelWorld = forwardRef<THREE.Group, ObjectPixelWorldProps>((props: ObjectPixelWorldProps, ref) => {
  const { nodes, materials } = useGLTF(`${PUBLIC_PATH}/objects/planet/scene.glb`) as GLTFResult;

  useEffect(() => {
    [
      materials.material,
      materials.Water,
      materials.Sand,
      materials.Grass,
      materials.Wood,
      materials.Tree,
      materials.Blue,
      materials.Star,
      materials.material_7,
    ].forEach((material) => {
      material.envMap = props.envMap;
    });
  }, [materials, props.envMap]);

  return (
    <group ref={ref} {...props} dispose={null}>
      <group>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group>
              <group>
                <group rotation={[-Math.PI / 2, 0, 0.681]} scale={358.622}>
                  <mesh geometry={nodes.Earth_Ice_0.geometry} material={materials.material} />
                  <mesh geometry={nodes.Earth_Water_0.geometry} material={materials.Water} />
                  <mesh geometry={nodes.Earth_Sand_0.geometry} material={materials.Sand} />
                  <mesh geometry={nodes.Earth_Grass_0.geometry} material={materials.Grass} />
                  <group position={[0.163, -0.812, 0.592]} rotation={[-0.525, -0.789, -2.962]} scale={[0.006, 0.006, 0.009]}>
                    <mesh geometry={nodes.Earth_Details_Wood_0.geometry} material={materials.Wood} />
                    <mesh geometry={nodes.Earth_Details_Tree_0.geometry} material={materials.Tree} />
                    <mesh geometry={nodes.Earth_Details_Tree_0_1.geometry} material={materials.Tree} />
                    <mesh geometry={nodes.Earth_Details_Ice_0.geometry} material={materials.material} />
                    <mesh geometry={nodes.Earth_Details_Blue_0.geometry} material={materials.Blue} />
                    <mesh geometry={nodes.Earth_Details_Sand_0.geometry} material={materials.Sand} />
                    <mesh geometry={nodes.Earth_Details_red_0.geometry} material={materials.material_7} />
                  </group>
                  <group position={[-0.577, -0.085, 0.844]} rotation={[-1.555, -0.135, 2.627]} scale={0.042}>
                    <mesh geometry={nodes.Clouds_and_Stars_Ice_0.geometry} material={materials.material} />
                    <mesh geometry={nodes.Clouds_and_Stars_Star_0.geometry} material={materials.Star} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
});

useGLTF.preload(`${PUBLIC_PATH}/objects/planet/scene.glb`);

export default ObjectPixelWorld;
