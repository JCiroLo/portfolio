/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: bvchepovyi (https://sketchfab.com/bvchepovyi)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/banana-duct-taped-to-the-wall-9efb18fa4f8444188e6dccf974c2dcee
Title: Banana duct taped to the wall
*/

import { useEffect } from "react";
import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { PUBLIC_PATH } from "../../utilities/constants";

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh;
    defaultMaterial_1: THREE.Mesh;
    defaultMaterial_2: THREE.Mesh;
  };
  materials: {
    tape: THREE.MeshStandardMaterial;
    frame: THREE.MeshStandardMaterial;
    banana: THREE.MeshStandardMaterial;
  };
};

type ObjectBananaProps = JSX.IntrinsicElements["group"] & { envMap: THREE.Texture };

const ObjectBanana = (props: ObjectBananaProps) => {
  const { nodes, materials } = useGLTF(`${PUBLIC_PATH}/objects/banana/scene.glb`) as GLTFResult;

  useEffect(() => {
    Object.values(materials).forEach((material) => {
      if (material.isMaterial) {
        material.envMap = props.envMap;
        material.envMapIntensity = 0.5;
        material.needsUpdate = true;
      }
    });
  }, [materials, props.envMap]);

  return (
    <group {...props} rotation={[Math.PI / 2, 0, 0]} scale={2} dispose={null}>
      <mesh geometry={nodes.defaultMaterial.geometry} material={materials.tape} />
      <mesh geometry={nodes.defaultMaterial_1.geometry} material={materials.frame} />
      <mesh geometry={nodes.defaultMaterial_2.geometry} material={materials.banana} />
    </group>
  );
};

useGLTF.preload(`${PUBLIC_PATH}/objects/banana/scene.glb`);

export default ObjectBanana;
